apiVersion: v1
kind: Namespace
metadata:
  name: development
  labels:
    app: development-roles
--- 
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: development
  name: cm-role
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["configmaps"]
  verbs: ["get", "watch", "list", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
# This role binding allows "javier" to read pods in the "default" namespace.
# You need to already have a Role named "development" in that namespace.
kind: RoleBinding
metadata:
  name: cm-role
  namespace: development
subjects:
# You can specify more than one "subject"
- kind: User
  name: javier # "name" is case sensitive
  apiGroup: rbac.authorization.k8s.io
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: Role #this must be Role or ClusterRole
  name: cm-role # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: development
  name: vars
  labels:
    app: front
data:
  db_host: dev.host.local
  db_user: dev_user
  script: |
    echo El nombre del host es $DB_HOST el nombre del usuario es $DB_USER > /usr/share/nginx/html/index2.html